name: KaaS DevelEnv

on:
  workflow_dispatch:

jobs:
  preparation:
    runs-on: ubuntu-latest

    steps:
    - name: create build version
      run: |
        DATE=`date '+%Y%m%d_%H%M'`
        echo "$DATE" >> build_version.txt
    - name: store build version
      uses: actions/upload-artifact@v2
      with:
        name: build_version
        path: build_version.txt

  jpdintra:
    runs-on: ubuntu-latest
    needs: preparation

    steps:
    - name: install rake
      run: |
        sudo apt update
        sudo apt-get -y install rake
    - name: checkout tools
      uses: actions/checkout@v2

    - name: checkout devel
      uses: actions/checkout@v2
      with:
        repository: jpd/devel
        path: jenkins/git_repos/devel

    - name: checkout database
      uses: actions/checkout@v2
      with:
        repository: jpd/database
        path: jenkins/git_repos/database

    - name: containerize jpdintra
      run: |
        cd jenkins
        rake -T
        rake E2E:Containerize:JPDINTRA
    - name: Login to Valkama
      uses: docker/login-action@v1
      with:
        registry: valkama.saunalahti.fi
        username: ${{ secrets.VALKAMA_USER }}
        password: ${{ secrets.VALKAMA_PASSWORD }}

    - name: get version
      uses: actions/download-artifact@v2
      with:
        name: build_version

    - name: containerize jpdintra
      run: |
        version=`cat build_version.txt`
        cd jenkins
        rake -T
        rake E2E:Deploy:ToValkama[develenv,jpdintra,${version}]
    - name: store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: jpdintra-infos
        path: jenkins/info_*


  wagner:
    runs-on: ubuntu-latest
    needs: preparation

    steps:
    - name: install rake
      run: |
        sudo apt update
        sudo apt-get -y install rake
    - name: checkout tools
      uses: actions/checkout@v2

    - name: checkout devel
      uses: actions/checkout@v2
      with:
        repository: jpd/devel
        path: jenkins/git_repos/devel

    - name: setup java & ant
      run: |
        sudo apt update
        sudo apt-get -y install openjdk-8-jdk ant
    - name: build wagner
      run: |
        cd jenkins
        rake -T
        rake E2E:Build:WAGNER
    - name: containerize wagner
      run: |
        cd jenkins
        rake -T
        rake E2E:Containerize:WAGNER
    - name: Login to Valkama
      uses: docker/login-action@v1
      with:
        registry: valkama.saunalahti.fi
        username: ${{ secrets.VALKAMA_USER }}
        password: ${{ secrets.VALKAMA_PASSWORD }}

    - name: get version
      uses: actions/download-artifact@v2
      with:
        name: build_version

    - name: containerize wagner
      run: |
        version=`cat build_version.txt`
        cd jenkins
        rake -T
        rake E2E:Deploy:ToValkama[develenv,wagner,${version}]
    - name: store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wagner-infos
        path: jenkins/info_*


  deploy-develenv:
    runs-on: ubuntu-latest
    needs: [ jpdintra, wagner ]

    steps:
    - name: apt install
      run: |
        sudo apt update
        sudo apt-get -y install rake
    - name: KaaS acces
      uses: azure/k8s-set-context@v1
      with:
        method: service-account
        k8s-url: https://10.222.156.226
        k8s-secret: ${{ secrets.LUUKKUTESTING_GHA_K8S_SECRET }}

    - name: repo-luukkudevops
      uses: actions/checkout@v2

    - name: get version
      uses: actions/download-artifact@v2
      with:
        name: build_version

    - name: update jpdintra
      run: |
        version=`cat build_version.txt`
        cd kaas_environments
        rake -f Rakefile-gha DevelenvNightly:UpdateImage:Deployment[jpdintra,${version}]
        sleep 60
        rake -f Rakefile-gha DevelenvNightly:Info:GetPodDeploymentLogs[jpdintra]
    - name: update wagner
      run: |
        version=`cat build_version.txt`
        cd kaas_environments
        rake -f Rakefile-gha DevelenvNightly:UpdateImage:Deployment[wagner,${version}]
        sleep 60
        rake -f Rakefile-gha DevelenvNightly:Info:GetPodDeploymentLogs[wagner]
  smoke-tests:
    runs-on: ubuntu-latest
    needs: deploy-develenv

    steps:
    - name: apt install
      run: |
        sudo apt update
        sudo apt-get -y install python3 python3-pip firefox
    - name: pip install
      run: |
        pip3 install --upgrade pip
        pip3 install robotframework robotframework-seleniumlibrary webdrivermanager pyyaml
    - name: setup webdrivermanager
      run: |
        ls -la /home/runner/.local/bin/
        /home/runner/.local/bin/webdrivermanager firefox
        export PATH="/home/runner/.local/share/WebDriverManager/bin:${PATH}"
    - name: repo-luukkudevops
      uses: actions/checkout@v2

    - name: jpdintra tests
      run: |
        export PATH="/home/runner/.local/bin:/home/runner/.local/share/WebDriverManager/bin:${PATH}"
        cd jenkins/tests
        robot -V env_develenv_ext.yaml -d results-jpdintra -i connectivity jpdintra/connectivity/
    - name: store test results
      uses: actions/upload-artifact@v2
      with:
        name: jpdintra-robot-results
        path: /runner/_work/luukku_devops/luukku_devops/jenkins/tests/results-jpdintra/

    - name: create jpdintra infofile
      run: |
        cd jenkins/tests
        ../scripts/create_infofile_test.sh jpdintra connectivity
        python3 ../../robot_test_result_parser/results_parser.py -s results-jpdintra/output.xml
        cat robot_results >> info_test_connectivity
    - name: store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test-infos-jpdintra
        path: jenkins/tests/info_test_connectivity
